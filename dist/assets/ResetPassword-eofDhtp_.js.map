{"version":3,"file":"ResetPassword-eofDhtp_.js","sources":["../../src/components/ResetPassword.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { motion } from 'framer-motion'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router-dom'\nimport { PasswordStrengthMeter } from './PasswordStrengthMeter'\nimport { supabase } from '../lib/supabaseClient' // Utilisation du client natif\n\nfunction ResetPassword() {\n  const [loading, setLoading] = useState(false)\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState<{ type: 'error' | 'success'; text: string } | null>(null)\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n\n  const handleResetPassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setMessage(null);\n\n    if (!password || !confirmPassword) {\n      setMessage({ type: 'error', text: 'Veuillez remplir tous les champs' });\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setMessage({ type: 'error', text: 'Les mots de passe ne correspondent pas' });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      console.log('Tentative de reset du mot de passe via Supabase...');\n      const { error } = await supabase.auth.updateUser({ password });\n      console.log('Réponse Supabase reçue', error);\n\n      if (error) {\n        setMessage({ type: 'error', text: error.message });\n        return;\n      }\n\n      setMessage({ type: 'success', text: 'Votre mot de passe a été mis à jour avec succès' });\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (error: any) {\n      console.error('Erreur inattendue reset password:', error);\n      setMessage({ type: 'error', text: error.message || 'Une erreur est survenue' });\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center px-4 py-12 sm:px-6 lg:px-8\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"max-w-md w-full space-y-8\"\n      >\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-white\">\n            Réinitialiser votre mot de passe\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-400\">\n            Veuillez choisir un nouveau mot de passe sécurisé\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleResetPassword}>\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Nouveau mot de passe\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value)\n                  setMessage(null)\n                }}\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-white/10 placeholder-gray-400 text-white rounded-t-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm bg-white/5\"\n                placeholder=\"Nouveau mot de passe\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"confirm-password\" className=\"sr-only\">\n                Confirmer le mot de passe\n              </label>\n              <input\n                id=\"confirm-password\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                value={confirmPassword}\n                onChange={(e) => {\n                  setConfirmPassword(e.target.value)\n                  setMessage(null)\n                }}\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-white/10 placeholder-gray-400 text-white rounded-b-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm bg-white/5\"\n                placeholder=\"Confirmer le mot de passe\"\n              />\n            </div>\n          </div>\n\n          <PasswordStrengthMeter password={password} />\n\n          {message && (\n            <div \n              className={`rounded-md p-4 ${\n                message.type === 'error' ? 'bg-red-900/50 text-red-400' : 'bg-green-900/50 text-green-400'\n              }`}\n              role=\"alert\"\n            >\n              <p className=\"text-sm\">{message.text}</p>\n            </div>\n          )}\n\n          <div className=\"space-y-3\">\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white btn-primary focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? t('common.loading') : 'Réinitialiser le mot de passe'}\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => navigate('/login')}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white btn-secondary focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            >\n              Retour à la connexion\n            </button>\n          </div>\n        </form>\n      </motion.div>\n    </div>\n  )\n}\n\nexport default ResetPassword;"],"names":["ResetPassword","loading","setLoading","useState","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","t","useTranslation","navigate","useNavigate","handleResetPassword","e","error","supabase","jsx","jsxs","motion","PasswordStrengthMeter"],"mappings":"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"}