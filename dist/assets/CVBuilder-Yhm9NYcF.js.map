{"version":3,"file":"CVBuilder-Yhm9NYcF.js","sources":["../../src/components/cv/CVTemplate.tsx","../../src/components/cv/sections/HeaderSection.tsx","../../src/components/cv/sections/ExperienceSection.tsx","../../src/components/cv/sections/EducationSection.tsx","../../src/components/cv/sections/SkillsSection.tsx","../../src/components/cv/sections/ProjectsSection.tsx","../../src/components/cv/CVEditor.tsx","../../src/components/cv/CVPreview.tsx","../../src/components/cv/CVBuilder.tsx"],"sourcesContent":["import { motion } from 'framer-motion'\n\ninterface TemplateProps {\n  template: {\n    id: string\n    name: string\n    description: string\n    category: string\n  }\n  onSelect: () => void\n}\n\nexport function CVTemplate({ template, onSelect }: TemplateProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-white/5 rounded-lg overflow-hidden hover:bg-white/10 transition-colors cursor-pointer\"\n      onClick={onSelect}\n    >\n      <div className=\"aspect-[3/4] bg-white/5\">\n        {/* Template preview image would go here */}\n      </div>\n      <div className=\"p-4\">\n        <h3 className=\"text-lg font-medium text-white\">{template.name}</h3>\n        <p className=\"text-sm text-gray-400 mt-1\">{template.description}</p>\n        <div className=\"mt-2\">\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-600/20 text-primary-400\">\n            {template.category}\n          </span>\n        </div>\n      </div>\n    </motion.div>\n  )\n}","interface HeaderProps {\n  content: {\n    name: string\n    title: string\n    email: string\n    phone: string\n    location: string\n    linkedin?: string\n    website?: string\n  }\n  onChange: (content: any) => void\n}\n\nexport function HeaderSection({ content, onChange }: HeaderProps) {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n            Nom complet\n          </label>\n          <input\n            type=\"text\"\n            value={content.name}\n            onChange={(e) => onChange({ ...content, name: e.target.value })}\n            className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n            Titre professionnel\n          </label>\n          <input\n            type=\"text\"\n            value={content.title}\n            onChange={(e) => onChange({ ...content, title: e.target.value })}\n            className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            value={content.email}\n            onChange={(e) => onChange({ ...content, email: e.target.value })}\n            className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n            Téléphone\n          </label>\n          <input\n            type=\"tel\"\n            value={content.phone}\n            onChange={(e) => onChange({ ...content, phone: e.target.value })}\n            className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n          Localisation\n        </label>\n        <input\n          type=\"text\"\n          value={content.location}\n          onChange={(e) => onChange({ ...content, location: e.target.value })}\n          className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n            LinkedIn\n          </label>\n          <input\n            type=\"url\"\n            value={content.linkedin}\n            onChange={(e) => onChange({ ...content, linkedin: e.target.value })}\n            className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n            Site web\n          </label>\n          <input\n            type=\"url\"\n            value={content.website}\n            onChange={(e) => onChange({ ...content, website: e.target.value })}\n            className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}","// import { useState } from 'react' // supprimé: non utilisé\nimport { motion } from 'framer-motion'\nimport { TrashIcon } from '@heroicons/react/24/outline'\n\ninterface Experience {\n  id: string\n  title: string\n  company: string\n  location: string\n  startDate: string\n  endDate?: string\n  current: boolean\n  description: string\n  achievements: string[]\n}\n\ninterface ExperienceProps {\n  content: {\n    items: Experience[]\n  }\n  onChange: (content: any) => void\n}\n\nexport function ExperienceSection({ content, onChange }: ExperienceProps) {\n  const addExperience = () => {\n    const newExperience: Experience = {\n      id: crypto.randomUUID(),\n      title: '',\n      company: '',\n      location: '',\n      startDate: '',\n      current: false,\n      description: '',\n      achievements: [],\n    }\n\n    onChange({\n      items: [...content.items, newExperience],\n    })\n  }\n\n  const updateExperience = (id: string, updates: Partial<Experience>) => {\n    onChange({\n      items: content.items.map(item =>\n        item.id === id ? { ...item, ...updates } : item\n      ),\n    })\n  }\n\n  const removeExperience = (id: string) => {\n    onChange({\n      items: content.items.filter(item => item.id !== id),\n    })\n  }\n\n  const addAchievement = (experienceId: string) => {\n    onChange({\n      items: content.items.map(item =>\n        item.id === experienceId\n          ? { ...item, achievements: [...item.achievements, ''] }\n          : item\n      ),\n    })\n  }\n\n  const updateAchievement = (experienceId: string, index: number, value: string) => {\n    onChange({\n      items: content.items.map(item =>\n        item.id === experienceId\n          ? {\n              ...item,\n              achievements: item.achievements.map((a, i) =>\n                i === index ? value : a\n              ),\n            }\n          : item\n      ),\n    })\n  }\n\n  const removeAchievement = (experienceId: string, index: number) => {\n    onChange({\n      items: content.items.map(item =>\n        item.id === experienceId\n          ? {\n              ...item,\n              achievements: item.achievements.filter((_, i) => i !== index),\n            }\n          : item\n      ),\n    })\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {content.items.map((experience, index) => (\n        <motion.div\n          key={experience.id}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-white/5 rounded-lg p-4\"\n        >\n          <div className=\"flex items-start justify-between mb-4\">\n            <h4 className=\"text-white font-medium\">Expérience {index + 1}</h4>\n            <button\n              onClick={() => removeExperience(experience.id)}\n              className=\"text-red-400 hover:text-red-300\"\n            >\n              <TrashIcon className=\"h-5 w-5\" />\n            </button>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  Titre du poste\n                </label>\n                <input\n                  type=\"text\"\n                  value={experience.title}\n                  onChange={(e) => updateExperience(experience.id, { title: e.target.value })}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  Entreprise\n                </label>\n                <input\n                  type=\"text\"\n                  value={experience.company}\n                  onChange={(e) => updateExperience(experience.id, { company: e.target.value })}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                Localisation\n              </label>\n              <input\n                type=\"text\"\n                value={experience.location}\n                onChange={(e) => updateExperience(experience.id, { location: e.target.value })}\n                className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  Date de début\n                </label>\n                <input\n                  type=\"month\"\n                  value={experience.startDate}\n                  onChange={(e) => updateExperience(experience.id, { startDate: e.target.value })}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  Date de fin\n                </label>\n                <input\n                  type=\"month\"\n                  value={experience.endDate}\n                  onChange={(e) => updateExperience(experience.id, { endDate: e.target.value })}\n                  disabled={experience.current}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500 disabled:opacity-50\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                id={`current-${experience.id}`}\n                checked={experience.current}\n                onChange={(e) => updateExperience(experience.id, {\n                  current: e.target.checked,\n                  endDate: e.target.checked ? undefined : experience.endDate,\n                })}\n                className=\"rounded border-white/10 bg-white/5 text-primary-500 focus:ring-primary-500\"\n              />\n              <label\n                htmlFor={`current-${experience.id}`}\n                className=\"text-sm text-gray-400\"\n              >\n                Poste actuel\n              </label>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                Description\n              </label>\n              <textarea\n                value={experience.description}\n                onChange={(e) => updateExperience(experience.id, { description: e.target.value })}\n                rows={3}\n                className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              />\n            </div>\n\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <label className=\"block text-sm font-medium text-gray-400\">\n                  Réalisations\n                </label>\n                <button\n                  onClick={() => addAchievement(experience.id)}\n                  className=\"text-primary-400 hover:text-primary-300\"\n                >\n                  +\n                </button>\n              </div>\n              <div className=\"space-y-2\">\n                {experience.achievements.map((achievement, i) => (\n                  <div key={i} className=\"flex items-center gap-2\">\n                    <input\n                      type=\"text\"\n                      value={achievement}\n                      onChange={(e) => updateAchievement(experience.id, i, e.target.value)}\n                      className=\"flex-1 bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                    />\n                    <button\n                      onClick={() => removeAchievement(experience.id, i)}\n                      className=\"text-red-400 hover:text-red-300\"\n                    >\n                      <TrashIcon className=\"h-5 w-5\" />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      ))}\n\n      <button\n        onClick={addExperience}\n        className=\"w-full py-2 border-2 border-dashed border-white/10 rounded-lg text-gray-400 hover:text-white hover:border-white/20 transition-colors\"\n      >\n        Ajouter une expérience\n      </button>\n    </div>\n  )\n}","import { motion } from 'framer-motion'\nimport { TrashIcon } from '@heroicons/react/24/outline'\n\ninterface Education {\n  id: string\n  degree: string\n  school: string\n  location: string\n  startDate: string\n  endDate?: string\n  current: boolean\n  description?: string\n}\n\ninterface EducationProps {\n  content: {\n    items: Education[]\n  }\n  onChange: (content: any) => void\n}\n\nexport function EducationSection({ content, onChange }: EducationProps) {\n  const addEducation = () => {\n    const newEducation: Education = {\n      id: crypto.randomUUID(),\n      degree: '',\n      school: '',\n      location: '',\n      startDate: '',\n      current: false,\n    }\n\n    onChange({\n      items: [...content.items, newEducation],\n    })\n  }\n\n  const updateEducation = (id: string, updates: Partial<Education>) => {\n    onChange({\n      items: content.items.map(item =>\n        item.id === id ? { ...item, ...updates } : item\n      ),\n    })\n  }\n\n  const removeEducation = (id: string) => {\n    onChange({\n      items: content.items.filter(item => item.id !== id),\n    })\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {content.items.map((education, index) => (\n        <motion.div\n          key={education.id}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-white/5 rounded-lg p-4\"\n        >\n          <div className=\"flex items-start justify-between mb-4\">\n            <h4 className=\"text-white font-medium\">Formation {index + 1}</h4>\n            <button\n              onClick={() => removeEducation(education.id)}\n              className=\"text-red-400 hover:text-red-300\"\n            >\n              <TrashIcon className=\"h-5 w-5\" />\n            </button>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                Diplôme\n              </label>\n              <input\n                type=\"text\"\n                value={education.degree}\n                onChange={(e) => updateEducation(education.id, { degree: e.target.value })}\n                className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  École\n                </label>\n                <input\n                  type=\"text\"\n                  value={education.school}\n                  onChange={(e) => updateEducation(education.id, { school: e.target.value })}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  Localisation\n                </label>\n                <input\n                  type=\"text\"\n                  value={education.location}\n                  onChange={(e) => updateEducation(education.id, { location: e.target.value })}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  Date de début\n                </label>\n                <input\n                  type=\"month\"\n                  value={education.startDate}\n                  onChange={(e) => updateEducation(education.id, { startDate: e.target.value })}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  Date de fin\n                </label>\n                <input\n                  type=\"month\"\n                  value={education.endDate}\n                  onChange={(e) => updateEducation(education.id, { endDate: e.target.value })}\n                  disabled={education.current}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500 disabled:opacity-50\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                id={`current-${education.id}`}\n                checked={education.current}\n                onChange={(e) => updateEducation(education.id, {\n                  current: e.target.checked,\n                  endDate: e.target.checked ? undefined : education.endDate,\n                })}\n                className=\"rounded border-white/10 bg-white/5 text-primary-500 focus:ring-primary-500\"\n              />\n              <label\n                htmlFor={`current-${education.id}`}\n                className=\"text-sm text-gray-400\"\n              >\n                En cours\n              </label>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                Description (optionnel)\n              </label>\n              <textarea\n                value={education.description}\n                onChange={(e) => updateEducation(education.id, { description: e.target.value })}\n                rows={3}\n                className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              />\n            </div>\n          </div>\n        </motion.div>\n      ))}\n\n      <button\n        onClick={addEducation}\n        className=\"w-full py-2 border-2 border-dashed border-white/10 rounded-lg text-gray-400 hover:text-white hover:border-white/20 transition-colors\"\n      >\n        Ajouter une formation\n      </button>\n    </div>\n  )\n}","// import { useState } from 'react' // supprimé: non utilisé\nimport { TrashIcon } from '@heroicons/react/24/outline'\n\ninterface SkillCategory {\n  id: string\n  name: string\n  skills: string[]\n}\n\ninterface SkillsProps {\n  content: {\n    categories: SkillCategory[]\n  }\n  onChange: (content: any) => void\n}\n\nexport function SkillsSection({ content, onChange }: SkillsProps) {\n  const addCategory = () => {\n    const newCategory: SkillCategory = {\n      id: crypto.randomUUID(),\n      name: '',\n      skills: [],\n    }\n\n    onChange({\n      categories: [...content.categories, newCategory],\n    })\n  }\n\n  const updateCategory = (id: string, updates: Partial<SkillCategory>) => {\n    onChange({\n      categories: content.categories.map(category =>\n        category.id === id ? { ...category, ...updates } : category\n      ),\n    })\n  }\n\n  const removeCategory = (id: string) => {\n    onChange({\n      categories: content.categories.filter(category => category.id !== id),\n    })\n  }\n\n  const addSkill = (categoryId: string) => {\n    onChange({\n      categories: content.categories.map(category =>\n        category.id === categoryId\n          ? { ...category, skills: [...category.skills, ''] }\n          : category\n      ),\n    })\n  }\n\n  const updateSkill = (categoryId: string, index: number, value: string) => {\n    onChange({\n      categories: content.categories.map(category =>\n        category.id === categoryId\n          ? {\n              ...category,\n              skills: category.skills.map((skill, i) =>\n                i === index ? value : skill\n              ),\n            }\n          : category\n      ),\n    })\n  }\n\n  const removeSkill = (categoryId: string, index: number) => {\n    onChange({\n      categories: content.categories.map(category =>\n        category.id === categoryId\n          ? {\n              ...category,\n              skills: category.skills.filter((_, i) => i !== index),\n            }\n          : category\n      ),\n    })\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {content.categories.map((category) => (\n        <div\n          key={category.id}\n          className=\"bg-white/5 rounded-lg p-4\"\n        >\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex-1\">\n              <input\n                type=\"text\"\n                value={category.name}\n                onChange={(e) => updateCategory(category.id, { name: e.target.value })}\n                placeholder=\"Nom de la catégorie\"\n                className=\"w-full bg-transparent text-white font-medium focus:outline-none\"\n              />\n            </div>\n            <button\n              onClick={() => removeCategory(category.id)}\n              className=\"text-red-400 hover:text-red-300\"\n            >\n              <TrashIcon className=\"h-5 w-5\" />\n            </button>\n          </div>\n\n          <div className=\"space-y-2\">\n            {category.skills.map((skill, i) => (\n              <div key={i} className=\"flex items-center gap-2\">\n                <input\n                  type=\"text\"\n                  value={skill}\n                  onChange={(e) => updateSkill(category.id, i, e.target.value)}\n                  className=\"flex-1 bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n                <button\n                  onClick={() => removeSkill(category.id, i)}\n                  className=\"text-red-400 hover:text-red-300\"\n                >\n                  <TrashIcon className=\"h-5 w-5\" />\n                </button>\n              </div>\n            ))}\n\n            <button\n              onClick={() => addSkill(category.id)}\n              className=\"w-full py-2 border-2 border-dashed border-white/10 rounded-lg text-gray-400 hover:text-white hover:border-white/20 transition-colors\"\n            >\n              Ajouter une compétence\n            </button>\n          </div>\n        </div>\n      ))}\n\n      <button\n        onClick={addCategory}\n        className=\"w-full py-2 border-2 border-dashed border-white/10 rounded-lg text-gray-400 hover:text-white hover:border-white/20 transition-colors\"\n      >\n        Ajouter une catégorie\n      </button>\n    </div>\n  )\n}","import { TrashIcon } from '@heroicons/react/24/outline'\n\ninterface Project {\n  id: string\n  name: string\n  description: string\n  technologies: string[]\n  url?: string\n  startDate: string\n  endDate?: string\n  current: boolean\n}\n\ninterface ProjectsProps {\n  content: {\n    items: Project[]\n  }\n  onChange: (content: any) => void\n}\n\nexport function ProjectsSection({ content, onChange }: ProjectsProps) {\n  const addProject = () => {\n    const newProject: Project = {\n      id: crypto.randomUUID(),\n      name: '',\n      description: '',\n      technologies: [],\n      startDate: '',\n      current: false,\n    }\n\n    onChange({\n      items: [...content.items, newProject],\n    })\n  }\n\n  const updateProject = (id: string, updates: Partial<Project>) => {\n    onChange({\n      items: content.items.map(item =>\n        item.id === id ? { ...item, ...updates } : item\n      ),\n    })\n  }\n\n  const removeProject = (id: string) => {\n    onChange({\n      items: content.items.filter(item => item.id !== id),\n    })\n  }\n\n  const addTechnology = (projectId: string) => {\n    onChange({\n      items: content.items.map(item =>\n        item.id === projectId\n          ? { ...item, technologies: [...item.technologies, ''] }\n          : item\n      ),\n    })\n  }\n\n  const updateTechnology = (projectId: string, index: number, value: string) => {\n    onChange({\n      items: content.items.map(item =>\n        item.id === projectId\n          ? {\n              ...item,\n              technologies: item.technologies.map((tech, i) =>\n                i === index ? value : tech\n              ),\n            }\n          : item\n      ),\n    })\n  }\n\n  const removeTechnology = (projectId: string, index: number) => {\n    onChange({\n      items: content.items.map(item =>\n        item.id === projectId\n          ? {\n              ...item,\n              technologies: item.technologies.filter((_, i) => i !== index),\n            }\n          : item\n      ),\n    })\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {content.items.map((project, index) => (\n        <div\n          key={project.id}\n          className=\"bg-white/5 rounded-lg p-4\"\n        >\n          <div className=\"flex items-start justify-between mb-4\">\n            <h4 className=\"text-white font-medium\">Projet {index + 1}</h4>\n            <button\n              onClick={() => removeProject(project.id)}\n              className=\"text-red-400 hover:text-red-300\"\n            >\n              <TrashIcon className=\"h-5 w-5\" />\n            </button>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                Nom du projet\n              </label>\n              <input\n                type=\"text\"\n                value={project.name}\n                onChange={(e) => updateProject(project.id, { name: e.target.value })}\n                className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                Description\n              </label>\n              <textarea\n                value={project.description}\n                onChange={(e) => updateProject(project.id, { description: e.target.value })}\n                rows={3}\n                className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                URL du projet (optionnel)\n              </label>\n              <input\n                type=\"url\"\n                value={project.url}\n                onChange={(e) => updateProject(project.id, { url: e.target.value })}\n                className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  Date de début\n                </label>\n                <input\n                  type=\"month\"\n                  value={project.startDate}\n                  onChange={(e) => updateProject(project.id, { startDate: e.target.value })}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-1\">\n                  Date de fin\n                </label>\n                <input\n                  type=\"month\"\n                  value={project.endDate}\n                  onChange={(e) => updateProject(project.id, { endDate: e.target.value })}\n                  disabled={project.current}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500 disabled:opacity-50\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                id={`current-${project.id}`}\n                checked={project.current}\n                onChange={(e) => updateProject(project.id, {\n                  current: e.target.checked,\n                  endDate: e.target.checked ? undefined : project.endDate,\n                })}\n                className=\"rounded border-white/10 bg-white/5 text-primary-500 focus:ring-primary-500\"\n              />\n              <label\n                htmlFor={`current-${project.id}`}\n                className=\"text-sm text-gray-400\"\n              >\n                Projet en cours\n              </label>\n            </div>\n\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <label className=\"block text-sm font-medium text-gray-400\">\n                  Technologies utilisées\n                </label>\n                <button\n                  onClick={() => addTechnology(project.id)}\n                  className=\"text-primary-400 hover:text-primary-300\"\n                >\n                  +\n                </button>\n              </div>\n              <div className=\"space-y-2\">\n                {project.technologies.map((tech, i) => (\n                  <div key={i} className=\"flex items-center gap-2\">\n                    <input\n                      type=\"text\"\n                      value={tech}\n                      onChange={(e) => updateTechnology(project.id, i, e.target.value)}\n                      className=\"flex-1 bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                    />\n                    <button\n                      onClick={() => removeTechnology(project.id, i)}\n                      className=\"text-red-400 hover:text-red-300\"\n                    >\n                      <TrashIcon className=\"h-5 w-5\" />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n\n      <button\n        onClick={addProject}\n        className=\"w-full py-2 border-2 border-dashed border-white/10 rounded-lg text-gray-400 hover:text-white hover:border-white/20 transition-colors\"\n      >\n        Ajouter un projet\n      </button>\n    </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport { useAuth } from '../../stores/auth'\nimport { supabase } from '../../lib/supabase'\nimport { ArrowLeftIcon } from '@heroicons/react/24/outline'\nimport { HeaderSection } from './sections/HeaderSection'\nimport { ExperienceSection } from './sections/ExperienceSection'\nimport { EducationSection } from './sections/EducationSection'\nimport { SkillsSection } from './sections/SkillsSection'\nimport { ProjectsSection } from './sections/ProjectsSection'\n\ninterface EditorProps {\n  templateId: string\n  onBack: () => void\n}\n\nexport function CVEditor({ templateId, onBack }: EditorProps) {\n  const { user } = useAuth()\n  const [sections, setSections] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [saving, setSaving] = useState(false)\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null)\n\n  useEffect(() => {\n    loadCV()\n  }, [templateId])\n\n  const loadCV = async () => {\n    try {\n      setLoading(true)\n      const { data: template, error: templateError } = await supabase\n        .from('cv_templates')\n        .select('structure')\n        .eq('id', templateId)\n        .single()\n\n      if (templateError) throw templateError\n\n      const { data: cv, error: cvError } = await supabase\n        .from('user_cvs')\n        .select('sections')\n        .eq('user_id', user?.id)\n        .eq('template_id', templateId)\n        .single()\n\n      if (!cvError) {\n        setSections(cv.sections)\n      } else {\n        setSections(template.structure.sections)\n      }\n    } catch (error) {\n      console.error('Error loading CV:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const saveCV = async () => {\n    try {\n      setSaving(true)\n      setMessage(null)\n\n      const { error } = await supabase\n        .from('user_cvs')\n        .upsert({\n          user_id: user?.id,\n          template_id: templateId,\n          sections,\n        })\n\n      if (error) throw error\n      setMessage({ type: 'success', text: 'CV enregistré avec succès' })\n    } catch (error) {\n      console.error('Error saving CV:', error)\n      setMessage({ type: 'error', text: 'Erreur lors de l\\'enregistrement du CV' })\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const updateSection = (index: number, content: any) => {\n    setSections(prev =>\n      prev.map((section, i) =>\n        i === index ? { ...section, content } : section\n      )\n    )\n  }\n\n  const renderSectionEditor = (section: any, index: number) => {\n    switch (section.type) {\n      case 'header':\n        return (\n          <HeaderSection\n            content={section.content}\n            onChange={(content) => updateSection(index, content)}\n          />\n        )\n      case 'experience':\n        return (\n          <ExperienceSection\n            content={section.content}\n            onChange={(content) => updateSection(index, content)}\n          />\n        )\n      case 'education':\n        return (\n          <EducationSection\n            content={section.content}\n            onChange={(content) => updateSection(index, content)}\n          />\n        )\n      case 'skills':\n        return (\n          <SkillsSection\n            content={section.content}\n            onChange={(content) => updateSection(index, content)}\n          />\n        )\n      case 'projects':\n        return (\n          <ProjectsSection\n            content={section.content}\n            onChange={(content) => updateSection(index, content)}\n          />\n        )\n      default:\n        return (\n          <div className=\"text-gray-400\">\n            Éditeur non disponible pour cette section\n          </div>\n        )\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-400\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"w-1/2 bg-background border-r border-white/10 p-6 overflow-y-auto\">\n      <div className=\"flex items-center gap-4 mb-6\">\n        <button\n          onClick={onBack}\n          className=\"p-2 text-gray-400 hover:text-white rounded-lg hover:bg-white/5\"\n        >\n          <ArrowLeftIcon className=\"h-5 w-5\" />\n        </button>\n        <h2 className=\"text-lg font-medium text-white\">Éditer votre CV</h2>\n      </div>\n\n      <div className=\"space-y-6\">\n        {sections.map((section, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n            className=\"card\"\n          >\n            <h3 className=\"text-white font-medium mb-4\">{section.title}</h3>\n            {renderSectionEditor(section, index)}\n          </motion.div>\n        ))}\n      </div>\n\n      {message && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className={`mt-6 rounded-lg p-4 ${\n            message.type === 'success'\n              ? 'bg-green-900/50 text-green-400'\n              : 'bg-red-900/50 text-red-400'\n          }`}\n        >\n          {message.text}\n        </motion.div>\n      )}\n\n      <div className=\"mt-6 flex justify-end\">\n        <button\n          onClick={saveCV}\n          disabled={saving}\n          className=\"btn-primary\"\n        >\n          {saving ? 'Enregistrement...' : 'Enregistrer'}\n        </button>\n      </div>\n    </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport { useAuth } from '../../stores/auth'\nimport { supabase } from '../../lib/supabase'\nimport { DocumentArrowDownIcon } from '@heroicons/react/24/outline'\n\ninterface PreviewProps {\n  templateId: string\n}\n\nexport function CVPreview({ templateId }: PreviewProps) {\n  const { user } = useAuth()\n  const [cv, setCV] = useState<any>(null)\n  const [loading, setLoading] = useState(true)\n  const [downloading, setDownloading] = useState(false)\n\n  useEffect(() => {\n    loadCV()\n  }, [templateId])\n\n  const loadCV = async () => {\n    try {\n      setLoading(true)\n      const { data, error } = await supabase\n        .from('user_cvs')\n        .select(`\n          *,\n          template:cv_templates(*)\n        `)\n        .eq('user_id', user?.id)\n        .eq('template_id', templateId)\n        .single()\n\n      if (error) throw error\n      setCV(data)\n    } catch (error) {\n      console.error('Error loading CV:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const downloadPDF = async () => {\n    try {\n      setDownloading(true)\n      const response = await fetch('/api/generate-cv-pdf', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ cv_id: cv.id }),\n      })\n\n      const blob = await response.blob()\n      const url = window.URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = 'cv.pdf'\n      document.body.appendChild(a)\n      a.click()\n      window.URL.revokeObjectURL(url)\n    } catch (error) {\n      console.error('Error downloading PDF:', error)\n    } finally {\n      setDownloading(false)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-400\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"w-1/2 bg-background p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-medium text-white\">Aperçu</h2>\n        <button\n          onClick={downloadPDF}\n          disabled={downloading}\n          className=\"btn-primary flex items-center gap-2\"\n        >\n          <DocumentArrowDownIcon className=\"h-5 w-5\" />\n          {downloading ? 'Téléchargement...' : 'Télécharger PDF'}\n        </button>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-xl p-8\">\n        {/* CV preview would go here */}\n      </div>\n    </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport { supabase } from '../../lib/supabase'\nimport { CVTemplate } from './CVTemplate'\nimport { CVEditor } from './CVEditor'\nimport { CVPreview } from './CVPreview'\n\ninterface Template {\n  id: string\n  name: string\n  description: string\n  structure: any\n  category: string\n}\n\nfunction CVBuilder() {\n  const [templates, setTemplates] = useState<Template[]>([])\n  const [selectedTemplate, setSelectedTemplate] = useState<string | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    loadTemplates()\n  }, [])\n\n  const loadTemplates = async () => {\n    try {\n      setLoading(true)\n      const { data, error } = await supabase\n        .from('cv_templates')\n        .select('*')\n        .order('name')\n\n      if (error) throw error\n      setTemplates(data || [])\n    } catch (error) {\n      console.error('Error loading templates:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-400\"></div>\n      </div>\n    )\n  }\n\n  if (!selectedTemplate) {\n    return (\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-bold text-white\">Créer votre CV</h1>\n          <p className=\"text-gray-400 mt-1\">\n            Choisissez un modèle pour commencer\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {templates.map((template) => (\n            <CVTemplate\n              key={template.id}\n              template={template}\n              onSelect={() => setSelectedTemplate(template.id)}\n            />\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex h-screen\">\n      <CVEditor\n        templateId={selectedTemplate}\n        onBack={() => setSelectedTemplate(null)}\n      />\n      <CVPreview templateId={selectedTemplate} />\n    </div>\n  )\n}\n\nexport default CVBuilder;"],"names":["CVTemplate","template","onSelect","jsxs","motion","jsx","HeaderSection","content","onChange","e","ExperienceSection","addExperience","newExperience","updateExperience","id","updates","item","removeExperience","addAchievement","experienceId","updateAchievement","index","value","a","i","removeAchievement","_","experience","TrashIcon","achievement","EducationSection","addEducation","newEducation","updateEducation","removeEducation","education","SkillsSection","addCategory","newCategory","updateCategory","category","removeCategory","addSkill","categoryId","updateSkill","skill","removeSkill","ProjectsSection","addProject","newProject","updateProject","removeProject","addTechnology","projectId","updateTechnology","tech","removeTechnology","project","CVEditor","templateId","onBack","user","useAuth","sections","setSections","useState","loading","setLoading","saving","setSaving","message","setMessage","useEffect","loadCV","templateError","supabase","cv","cvError","error","saveCV","updateSection","prev","section","renderSectionEditor","ArrowLeftIcon","CVPreview","setCV","downloading","setDownloading","data","downloadPDF","blob","url","DocumentArrowDownIcon","CVBuilder","templates","setTemplates","selectedTemplate","setSelectedTemplate","loadTemplates"],"mappings":"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"}