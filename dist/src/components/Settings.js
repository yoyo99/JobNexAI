var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { motion } from 'framer-motion';
import { useTranslation } from 'react-i18next';
import { useAuth } from '../stores/auth';
import { supabase } from '../lib/supabase';
export function Settings() {
    const { user } = useAuth();
    const { t, i18n } = useTranslation();
    const [loading, setLoading] = useState(false);
    const [activeTab, setActiveTab] = useState('security');
    const [message, setMessage] = useState(null);
    const [securitySettings, setSecuritySettings] = useState({
        enable_mfa: false,
        enable_login_notifications: true,
        enable_suspicious_activity_alerts: true,
    });
    const [notificationSettings, setNotificationSettings] = useState({
        email_notifications: true,
        push_notifications: true,
        job_alerts: true,
        message_notifications: true,
        application_updates: true,
    });
    const [privacySettings, setPrivacySettings] = useState({
        profile_visibility: 'public',
        show_online_status: true,
        allow_messages: true,
        allow_connection_requests: true,
    });
    const saveSettings = () => __awaiter(this, void 0, void 0, function* () {
        if (!user)
            return;
        try {
            setLoading(true);
            const { error } = yield supabase
                .from('user_settings')
                .upsert({
                user_id: user.id,
                security: securitySettings,
                notifications: notificationSettings,
                privacy: privacySettings,
                updated_at: new Date().toISOString()
            });
            if (error)
                throw error;
            setMessage({ type: 'success', text: 'ParamÃ¨tres mis Ã  jour avec succÃ¨s' });
        }
        catch (error) {
            console.error('Error saving settings:', error);
            setMessage({ type: 'error', text: 'Erreur lors de la mise Ã  jour des paramÃ¨tres' });
        }
        finally {
            setLoading(false);
        }
    });
    const languages = [
        { code: 'fr', name: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·' },
        { code: 'en', name: 'English', flag: 'ðŸ‡¬ðŸ‡§' },
        { code: 'es', name: 'EspaÃ±ol', flag: 'ðŸ‡ªðŸ‡¸' },
        { code: 'de', name: 'Deutsch', flag: 'ðŸ‡©ðŸ‡ª' },
        { code: 'it', name: 'Italiano', flag: 'ðŸ‡®ðŸ‡¹' },
    ];
    return (_jsxs("div", { className: "max-w-4xl mx-auto", children: [_jsxs("div", { className: "mb-8", children: [_jsx("h1", { className: "text-2xl font-bold text-white", children: "Param\u00E8tres" }), _jsx("p", { className: "text-gray-400 mt-1", children: "G\u00E9rez vos pr\u00E9f\u00E9rences de s\u00E9curit\u00E9, de confidentialit\u00E9 et de notifications" })] }), _jsx("div", { className: "mb-6 border-b border-white/10", children: _jsxs("nav", { className: "flex space-x-8", children: [_jsx("button", { onClick: () => setActiveTab('security'), className: `py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'security'
                                ? 'border-primary-400 text-primary-400'
                                : 'border-transparent text-gray-400 hover:text-gray-300 hover:border-gray-300'}`, children: "S\u00E9curit\u00E9" }), _jsx("button", { onClick: () => setActiveTab('notifications'), className: `py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'notifications'
                                ? 'border-primary-400 text-primary-400'
                                : 'border-transparent text-gray-400 hover:text-gray-300 hover:border-gray-300'}`, children: "Notifications" }), _jsx("button", { onClick: () => setActiveTab('privacy'), className: `py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'privacy'
                                ? 'border-primary-400 text-primary-400'
                                : 'border-transparent text-gray-400 hover:text-gray-300 hover:border-gray-300'}`, children: "Confidentialit\u00E9" }), _jsx("button", { onClick: () => setActiveTab('language'), className: `py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'language'
                                ? 'border-primary-400 text-primary-400'
                                : 'border-transparent text-gray-400 hover:text-gray-300 hover:border-gray-300'}`, children: "Langue" })] }) }), activeTab === 'security' && (_jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "space-y-6", children: _jsxs("div", { className: "card", children: [_jsx("h2", { className: "text-lg font-medium text-white mb-6", children: "Param\u00E8tres de s\u00E9curit\u00E9" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Authentification \u00E0 deux facteurs" }), _jsx("p", { className: "text-sm text-gray-400", children: "Ajoutez une couche de s\u00E9curit\u00E9 suppl\u00E9mentaire \u00E0 votre compte" })] }), _jsx("button", { onClick: () => setSecuritySettings(prev => (Object.assign(Object.assign({}, prev), { enable_mfa: !prev.enable_mfa }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${securitySettings.enable_mfa ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${securitySettings.enable_mfa ? 'translate-x-5' : 'translate-x-0'}` }) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Notifications de connexion" }), _jsx("p", { className: "text-sm text-gray-400", children: "Recevez une notification lors d'une nouvelle connexion" })] }), _jsx("button", { onClick: () => setSecuritySettings(prev => (Object.assign(Object.assign({}, prev), { enable_login_notifications: !prev.enable_login_notifications }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${securitySettings.enable_login_notifications ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${securitySettings.enable_login_notifications ? 'translate-x-5' : 'translate-x-0'}` }) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Alertes d'activit\u00E9 suspecte" }), _jsx("p", { className: "text-sm text-gray-400", children: "Soyez alert\u00E9 en cas d'activit\u00E9 suspecte sur votre compte" })] }), _jsx("button", { onClick: () => setSecuritySettings(prev => (Object.assign(Object.assign({}, prev), { enable_suspicious_activity_alerts: !prev.enable_suspicious_activity_alerts }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${securitySettings.enable_suspicious_activity_alerts ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${securitySettings.enable_suspicious_activity_alerts ? 'translate-x-5' : 'translate-x-0'}` }) })] })] })] }) })), activeTab === 'notifications' && (_jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "space-y-6", children: _jsxs("div", { className: "card", children: [_jsx("h2", { className: "text-lg font-medium text-white mb-6", children: "Param\u00E8tres de notification" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Notifications par email" }), _jsx("p", { className: "text-sm text-gray-400", children: "Recevez des notifications par email" })] }), _jsx("button", { onClick: () => setNotificationSettings(prev => (Object.assign(Object.assign({}, prev), { email_notifications: !prev.email_notifications }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${notificationSettings.email_notifications ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${notificationSettings.email_notifications ? 'translate-x-5' : 'translate-x-0'}` }) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Notifications push" }), _jsx("p", { className: "text-sm text-gray-400", children: "Recevez des notifications dans votre navigateur" })] }), _jsx("button", { onClick: () => setNotificationSettings(prev => (Object.assign(Object.assign({}, prev), { push_notifications: !prev.push_notifications }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${notificationSettings.push_notifications ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${notificationSettings.push_notifications ? 'translate-x-5' : 'translate-x-0'}` }) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Alertes emploi" }), _jsx("p", { className: "text-sm text-gray-400", children: "Recevez des alertes pour les nouveaux emplois correspondant \u00E0 vos crit\u00E8res" })] }), _jsx("button", { onClick: () => setNotificationSettings(prev => (Object.assign(Object.assign({}, prev), { job_alerts: !prev.job_alerts }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${notificationSettings.job_alerts ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${notificationSettings.job_alerts ? 'translate-x-5' : 'translate-x-0'}` }) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Messages" }), _jsx("p", { className: "text-sm text-gray-400", children: "Recevez des notifications pour les nouveaux messages" })] }), _jsx("button", { onClick: () => setNotificationSettings(prev => (Object.assign(Object.assign({}, prev), { message_notifications: !prev.message_notifications }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${notificationSettings.message_notifications ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${notificationSettings.message_notifications ? 'translate-x-5' : 'translate-x-0'}` }) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Mises \u00E0 jour des candidatures" }), _jsx("p", { className: "text-sm text-gray-400", children: "Recevez des notifications pour les mises \u00E0 jour de vos candidatures" })] }), _jsx("button", { onClick: () => setNotificationSettings(prev => (Object.assign(Object.assign({}, prev), { application_updates: !prev.application_updates }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${notificationSettings.application_updates ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${notificationSettings.application_updates ? 'translate-x-5' : 'translate-x-0'}` }) })] })] })] }) })), activeTab === 'privacy' && (_jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "space-y-6", children: _jsxs("div", { className: "card", children: [_jsx("h2", { className: "text-lg font-medium text-white mb-6", children: "Param\u00E8tres de confidentialit\u00E9" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-white mb-2", children: "Visibilit\u00E9 du profil" }), _jsxs("select", { value: privacySettings.profile_visibility, onChange: (e) => setPrivacySettings(prev => (Object.assign(Object.assign({}, prev), { profile_visibility: e.target.value }))), className: "w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500", children: [_jsx("option", { value: "public", children: "Public" }), _jsx("option", { value: "connections", children: "Connexions uniquement" }), _jsx("option", { value: "private", children: "Priv\u00E9" })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Afficher le statut en ligne" }), _jsx("p", { className: "text-sm text-gray-400", children: "Permettre aux autres utilisateurs de voir quand vous \u00EAtes en ligne" })] }), _jsx("button", { onClick: () => setPrivacySettings(prev => (Object.assign(Object.assign({}, prev), { show_online_status: !prev.show_online_status }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${privacySettings.show_online_status ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0  transition duration-200 ease-in-out ${privacySettings.show_online_status ? 'translate-x-5' : 'translate-x-0'}` }) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Autoriser les messages" }), _jsx("p", { className: "text-sm text-gray-400", children: "Permettre aux autres utilisateurs de vous envoyer des messages" })] }), _jsx("button", { onClick: () => setPrivacySettings(prev => (Object.assign(Object.assign({}, prev), { allow_messages: !prev.allow_messages }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${privacySettings.allow_messages ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${privacySettings.allow_messages ? 'translate-x-5' : 'translate-x-0'}` }) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: "Autoriser les demandes de connexion" }), _jsx("p", { className: "text-sm text-gray-400", children: "Permettre aux autres utilisateurs de vous envoyer des demandes de connexion" })] }), _jsx("button", { onClick: () => setPrivacySettings(prev => (Object.assign(Object.assign({}, prev), { allow_connection_requests: !prev.allow_connection_requests }))), className: `relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${privacySettings.allow_connection_requests ? 'bg-primary-600' : 'bg-gray-700'}`, children: _jsx("span", { className: `inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${privacySettings.allow_connection_requests ? 'translate-x-5' : 'translate-x-0'}` }) })] })] })] }) })), activeTab === 'language' && (_jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "space-y-6", children: _jsxs("div", { className: "card", children: [_jsx("h2", { className: "text-lg font-medium text-white mb-6", children: "Param\u00E8tres de langue" }), _jsx("div", { className: "grid grid-cols-1 gap-4", children: languages.map((language) => (_jsxs("button", { onClick: () => i18n.changeLanguage(language.code), className: `flex items-center justify-between p-4 rounded-lg transition-colors ${i18n.language === language.code
                                    ? 'bg-primary-600/20'
                                    : 'bg-white/5 hover:bg-white/10'}`, children: [_jsxs("div", { className: "flex items-center gap-4", children: [_jsx("span", { className: "text-2xl", children: language.flag }), _jsx("span", { className: "text-white", children: language.name })] }), i18n.language === language.code && (_jsx("span", { className: "text-primary-400", children: "\u2713" }))] }, language.code))) })] }) })), message && (_jsx("div", { className: `mt-6 rounded-md p-4 ${message.type === 'success' ? 'bg-green-900/50 text-green-400' : 'bg-red-900/50 text-red-400'}`, children: _jsx("p", { className: "text-sm", children: message.text }) })), _jsx("div", { className: "mt-8 flex justify-end", children: _jsx("button", { onClick: saveSettings, disabled: loading, className: "btn-primary", children: loading ? 'Enregistrement...' : 'Enregistrer les paramÃ¨tres' }) })] }));
}
