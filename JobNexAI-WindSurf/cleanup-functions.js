/**
 * Script de nettoyage des fonctions Netlify
 * 
 * Ce script nettoie le r√©pertoire des fonctions et cr√©e une structure minimale
 * pour √©viter les probl√®mes de d√©ploiement.
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üßπ Nettoyage des fonctions Netlify...');

// Chemin vers le r√©pertoire des fonctions
const functionsDir = path.resolve(__dirname, 'functions');

// V√©rifier si le r√©pertoire des fonctions existe
if (!fs.existsSync(functionsDir)) {
  console.log('üìÅ Cr√©ation du r√©pertoire functions...');
  fs.mkdirSync(functionsDir, { recursive: true });
} else {
  // Si le r√©pertoire existe, vider son contenu
  console.log('üóëÔ∏è Vidage du r√©pertoire functions...');
  
  try {
    // Lister tous les fichiers et dossiers
    const files = fs.readdirSync(functionsDir);
    
    // Supprimer chaque fichier/dossier
    for (const file of files) {
      const filePath = path.join(functionsDir, file);
      
      if (fs.lstatSync(filePath).isDirectory()) {
        // Supprimer r√©cursivement le dossier
        fs.rmSync(filePath, { recursive: true, force: true });
      } else {
        // Supprimer le fichier
        fs.unlinkSync(filePath);
      }
    }
    
    console.log('‚úÖ R√©pertoire functions vid√© avec succ√®s');
  } catch (error) {
    console.error('‚ùå Erreur lors du nettoyage du r√©pertoire functions:', error);
  }
}

// Cr√©er une fonction minimale pour √©viter les erreurs
console.log('üìù Cr√©ation d\'une fonction minimale...');

const minimalFunctionDir = path.join(functionsDir, 'placeholder');
if (!fs.existsSync(minimalFunctionDir)) {
  fs.mkdirSync(minimalFunctionDir, { recursive: true });
}

const minimalFunctionContent = `
// Fonction minimale pour √©viter les erreurs de d√©ploiement
exports.handler = async function(event, context) {
  return {
    statusCode: 200,
    body: JSON.stringify({ message: "Fonction minimale fonctionnelle" })
  };
};
`;

fs.writeFileSync(path.join(minimalFunctionDir, 'placeholder.js'), minimalFunctionContent);
console.log('‚úÖ Fonction minimale cr√©√©e avec succ√®s');

console.log('‚ú® Nettoyage des fonctions termin√©!');
